climate_data_df = readRDS("/Users/golumo/Downloads/version2_province_level_past_future_climate_data.RDS")
View(climate_data_df)
max(climate_data_df$yr)
colnames(climate_data_df)
## Model parameters
model_params = read.csv("~/gitRepos/code_climate/province_sites_parameters.csv", sep=";")
saveRDS(model_params, file = "~/gitRepos/malclimsim/ClimateTutorialDashboard/data/province_sites_parameters.RDS")
## Climate data preparation
climate_data1 = readRDS("~/gitRepos/code_climate/province_level_past_future_climate_data.RDS")
climate_data = readRDS("/Users/golumo/Downloads/version2_province_level_past_future_climate_data.RDS")
colnames(climate_data1)
library(malclimsim)
## Climate data preparation
climate_data = readRDS("~/gitRepos/code_climate/province_level_past_future_climate_data.RDS")
View(climate_data)
## Climate data preparation
climate_data1 = readRDS("~/gitRepos/code_climate/province_level_past_future_climate_data.RDS")
climate_data2 = readRDS("~/gitRepos/code_climate/version2_province_level_past_future_climate_data.RDS")
View(climate_data1)
View(climate_data2)
View(climate_data2)
View(climate_data2)
View(climate_data1)
unique(climate_data1$none_seasonal_ppt)
length(unique(climate_data1$none_seasonal_ppt))
## Climate data preparation
climate_data1 = readRDS("~/gitRepos/code_climate/province_level_past_future_climate_data.RDS")
climate_data2 = readRDS("~/gitRepos/code_climate/version2_province_level_past_future_climate_data.RDS")
climate_data_no_seasonality = climate_data1 %>% select(province, date, none_seasonal_ppt)
climate_data_no_seasonality %>% rename(no_seasonality = none_seasonal_ppt)
climate_data_no_seasonality = climate_data_no_seasonality %>% rename(no_seasonality = none_seasonal_ppt)
# Fix the no seasonal entries in the new dataset to be constant
# Update values in df1 with those from df2 where dates match
joined_df = climate_data2 %>%
left_join(climate_data_no_seasonality, by = c("province", "date")) %>%
mutate(none_seasonal_ppt = no_seasonality) %>%
select(no_seasonality)  # Remove the temporary new_value column
View(joined_df)
# Fix the no seasonal entries in the new dataset to be constant
# Update values in df1 with those from df2 where dates match
joined_df = climate_data2 %>%
left_join(climate_data_no_seasonality, by = c("province", "date")) %>%
mutate(none_seasonal_ppt = no_seasonality) %>%
select(-no_seasonality)  # Remove the temporary new_value column
View(joined_df)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
climate_data_df = readRDS("~/gitRepos/climate_tutorial_dashboard/processing_scripts/all_climate_data_province_v2.RDS")
View(climate_data_df)
View(climate_data)
sum(climate_data$norm_ppt - climate_data$seasonal_ppt)
(climate_data$norm_ppt - climate_data$seasonal_ppt)
plot(climate_data$norm_ppt - climate_data$seasonal_ppt)
a = (climate_data$norm_ppt - climate_data$seasonal_ppt)
a = as.data.frame(climate_data$norm_ppt - climate_data$seasonal_ppt)
View(a)
View(a)
climate_data$diff = climate_data$norm_ppt - climate_data$seasonal_ppt
a = climate_data %>% select(date, diff)
View(a)
View(climate_data)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
View(climate_data)
View(climate_data2)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
debugSource("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
View(climate_data)
colnames(climate_data)
# Remove the seasonal_ppt column which is not needed
climate_data = climate_data %>% select(-seasonal_ppt)
# Rename columns to fit with scenario encoding
all_climate_data = climate_data %>% rename(normal_ppt = norm_ppt,
drier_ppt = dry_ppt,
extreme_dry_ppt = drier_ppt,
wetter_ppt = wet_ppt,
extreme_wet_ppt = wetter_ppt,
normal_temp = norm_temp,
warmer_temp = warm_temp,
colder_temp = cool_temp,
extreme_warm_temp = warmer_temp,
extreme_cold_temp = cooler_temp)
saveRDS(all_climate_data, file = "~/gitRepos/climate_tutorial_dashboard/processing_scripts/all_climate_data_province_v2.RDS")
filtered_climate_data = climate_data %>% filter(yr >= 2023 & yr <= 39)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
ts(X_df, frequency = 365)
all_climate_data$rain_scenario_col
View(all_climate_data)
all_climate_data[, rain_scenario_col]
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
View(all_climate_data)
View(filtered_climate_data)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
View(filtered_climate_data)
View(climate_data1)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
View(filtered_climate_data)
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(rain)
View(rain)
View(anom)
Q
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(rain)
View(months_active)
View(counter_rain)
View(met_df)
# Set the peak, before and after as the active months
met_df_rain = met_df %>% filter(year >= year1 & year <= year2) %>% select(year, rain_scen)
View(met_df)
# Set the peak, before and after as the active months
met_df_rain = met_df %>% filter(yr >= year1 & yr <= year2) %>% select(yr, rain_scen)
View(met_df_rain)
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(climate_data_df)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
1 %%12
12 %%12
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(climate_data_df)
rlang::last_trace()
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
?gen_smc_schedule
View(all_model_pred)
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
unique(climate_data_df$province)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(climate_data_df)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
View(all_model_pred)
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
# SMC starts in 2025
months_active[4:nrow(months_active), c((month_max - 1) + 12 * (month_max == 1),
month_max,
month_max %% 12 + 1)] = 1  # Set the SMC deployment months
smc_schedule = gen_smc_schedule(start_date, end_date, years,
months_active = months_active,
months_30_days = TRUE, coverage = 40)
View(smc_schedule)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
76936.5/2
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
90000*0.007
60*30
630+1800
90000*12*0.007 + 16TB*30
90000*12*0.007 + 16*30
45000*12*0.007 + 16*30
45000*12*0.007 + 16*50
View(all_model_pred)
climate_data = readRDS("~/gitRepos/climate_tutorial_dashboard/dashboardApp/data/climate_data_province_v2.RDS")
climate_data = readRDS("~/gitRepos/climate_tutorial_dashboard/dashboardApp/data/climate_data_province_v2.RDS")
View(climate_data)
shiny::runApp('gitRepos/malclimsim/ClimateTutorialDashboard')
runApp('gitRepos/malclimsim/ClimateTutorialDashboard')
runApp('gitRepos/malclimsim/ClimateTutorialDashboard')
runApp('gitRepos/malclimsim/ClimateTutorialDashboard')
runApp('gitRepos/malclimsim/ClimateTutorialDashboard')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(smc_schedule)
View(smc_schedule)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
a = readRDS("~/gitRepos/climate_tutorial_dashboard/dashboardApp/data/model_predictions_province.RDS")
View(a)
View(climate_data_df)
View(climate_data_df)
saveRDS(all_model_pred, file = "~/gitRepos/climate_tutorial_dashboard/dashboardApp/data/model_predictions_province_test.RDS")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
View(climate_data_df)
a = readRDS("~/gitRepos/climate_tutorial_dashboard/dashboardApp/data/climate_data_province_v2.RDS")
View(a)
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(temp)
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(smc_schedule)
View(smc_schedule)
a = readRDS("~/gitRepos/climate_tutorial_dashboard/dashboardApp/data/climate_data_province.RDS")
View(a)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(smc_schedule)
View(results)
a = smc_schedule %>% filter(SMC == 1)
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
a = smc_schedule %>% filter(SMC == 1)
View(a)
View(results)
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(smc_schedule)
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(met_df_rain)
Q
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(met_df_rain)
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
View(all_model_pred)
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
View(climate_data_df)
View(climate_data_df)
paste0("temp", 20:29, "C")
20:2:28
20:28:2
seq(20, 22, by = 2)
seq(20, 28, by = 2)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
View(all_model_pred)
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
options(rsconnect.check.certificate = FALSE)
install.packages("rsconnect")
shiny::runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
params = readRDS("~/gitRepos/climate_tutorial_dashboard/dashboardApp/data/province_sites_parameters.RDS")
View(params)
round(11.5)
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/malclimsim/dashboard_processing_scripts/rainfall_anomaly_calculation.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
climate_data2 = readRDS("~/gitRepos/code_climate/version3_province_level_past_future_climate_data.RDS")
View(climate_data2)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
View(filtered_climate_data)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
idx_future
# Change the seasonality for the future
idx_future = which(all_climate_data$yr >= 2025)
all_climate_data[idx_future, column_name] = seasonality_fun(all_climate_data[idx_future, rain_scenario_col], seas_scenario)
# First initialize the new column with no seasonality change
all_climate_data[, column_name] = all_climate_data[, rain_scenario_col]
# Change the seasonality for the future
idx_future = which(all_climate_data$yr >= 2024)
all_climate_data[idx_future, column_name] = seasonality_fun(all_climate_data[idx_future, rain_scenario_col], seas_scenario)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(months_active)
c((month_max - 1) + 12 * (month_max == 1),
month_max,
month_max %% 12 + 1,
month_max %% 12 + 2)
c((month_max - 1) + 12 * (month_max == 1),
month_max,
(month_max + 1) %% 12,
(month_max + 2) %% 12)
c((month_max - 1) + 12 * (month_max == 1),
month_max,
month_max %% 12 + 1,
(month_max + 2) %% 12)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(all_model_pred)
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(rain)
View(rain)
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
source("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
is.na(c(NA, 3))
any(is.na(c(NA, 3)))
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
debugSource("~/gitRepos/malclimsim/dashboard_processing_scripts/generate_model_predictions.R")
View(rain)
which(is.na(rain$anom))
a = rain[which(is.na(rain$anom)),]
View(a)
View(counter_rain)
View(observed_rain)
View(met_df_rain)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
View(filtered_climate_data)
which(is.na(filtered_climate_data))
which(is.na(filtered_climate_data$normal_seasonal_amplified_ppt))
which(is.na(filtered_climate_data$drier_seasonal_longer_ppt))
which(is.na(filtered_climate_data$extreme_dry_seasonal_amplified_ppt))
which(is.na(filtered_climate_data$more_wet_seasonal_longer_ppt))
which(is.na(filtered_climate_data$extreme_wet_seasonal_amplified_ppt))
which(is.na(filtered_climate_data$more_wet_seasonal_amplified_ppt))
na_counts <- colSums(is.na(all_climate_data))
na_counts
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
View(all_climate_data)
## Climate data preparation
climate_data1 = readRDS("~/gitRepos/code_climate/province_level_past_future_climate_data.RDS")
View(climate_data1)
View(climate_data1)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
?nls
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
na_counts
# Rename columns to fit with scenario encoding
all_climate_data = climate_data %>% rename(normal_ppt = norm_ppt,
drier_ppt = dry_ppt,
extreme_dry_ppt = drier_ppt,
more_wet_ppt = wet_ppt,
extreme_wet_ppt = wetter_ppt,
normal_temp = norm_temp,
warmer_temp = warm_temp,
colder_temp = cool_temp,
extreme_warm_temp = warmer_temp,
extreme_cold_temp = cooler_temp)
na_counts <- colSums(is.na(all_climate_data))
na_counts
View(all_climate_data)
## Model parameters
model_params = read.csv("~/gitRepos/code_climate/province_sites_parameters.csv", sep=";")
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
debugSource("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
a = all_climate_data[idx_future, rain_scenario_col]
a
seasonality_fun(all_climate_data[idx_future, rain_scenario_col], seas_scenario)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
a = all_climate_data[idx_future, column_name]
a
a = all_climate_data[idx_future, c("date", "column_name")]
a = all_climate_data[idx_future, c("date", column_name)]
View(a)
seasonality_fun(a$rain_scenario_col, seas_scenario)
View(a)
a = all_climate_data[idx_location, c("date", rain_scenario_col)]
View(a)
View(a)
seasonality_fun(a$extreme_wet_ppt, seas_scenario)
a = all_climate_data[idx_future, c("date", rain_scenario_col)]
seasonality_fun(a, seas_scenario)
source("~/gitRepos/climate_tutorial_dashboard/processing_scripts/generate_model_data.R")
a = all_climate_data[idx_future, rain_scenario_col]
a = all_climate_data[idx_future, c("date", rain_scenario_col)]
View(a)
seasonality_fun(a$drier_ppt, seas_scenario)
saveRDS(a, "~/gitRepos/code_climate/drier_ppt_2024.RDS")
seas_scenario
runApp('gitRepos/climate_tutorial_dashboard/dashboardApp')
